target_default: 4_model_for_PGDL

packages:
  - yaml
  - dplyr
  - tidyr
  - scipiper

sources:
  - 4_model/src/EnKF_functions.R
  - 4_model/src/get_sntemp_values.R
  - 4_model/src/run_sntemp.R
  - 4_model/src/update_sntemp.R
  - 4_model/src/set_sntemp_output.R
  - 4_model_for_PGDL/src/data_for_pgdl.R
  - 4_model_for_PGDL/src/training_test_data.R
  - 4_model_for_PGDL/src/get_segment_driver.R
  - 4_model_calibrate/src/get_subbasins.R
  - 4_model_calibrate/src/get_subbasin_obs.R
  - 4_model_for_PGDL/src/subbasins_options.R
  - 4_model_for_PGDL/src/get_prms_sntemp_model.R

targets:
  4_model_for_PGDL:
    depends:
      - 4_model_for_PGDL/out/sntemp_input.feather.ind
      - 4_model_for_PGDL/out/sntemp_output.feather.ind

##########################################
# uncalibrated SNTemp run for input to PGDL
##########################################

  # need to make sure that 20191002_Delaware_streamtemp folder is in project on
  #  local machine; this is on GD if not on local machine
  get_prms_sntemp:
    command: get_prms_sntemp_model(
      gd_zip_ind_file = 'prms_sntemp/20191002_Delaware_streamtemp.zip.ind',
      unzip_loc = I('prms_sntemp'))

  # moving model to temporary run location so that we can change parameters, etc.. while keeping
  #  original model preserved
  move_model_to_run_dir:
    command: copy_model_to_run_dir(
      model_run_loc = I('4_model_for_PGDL/tmp'),
      orig_model_loc = I('20191002_Delaware_streamtemp'))

  uncal_settings:
    command: read_yaml('4_model_for_PGDL/cfg/uncal_settings.yml')

  sntemp_output_vars:
    command: uncal_settings[I('sntemp_output')]

  set_sntemp_output_vars:
    command: set_sntemp_output(
      output_names = sntemp_output_vars,
      model_run_loc = '4_model_for_PGDL/tmp')

  uncal_start:
    command: uncal_settings[I('start')]

  uncal_stop:
    command: uncal_settings[I('stop')]

  uncal_sntemp_run:
    command: run_sntemp(
      start = uncal_start,
      stop = uncal_stop,
      spinup = I('F'),
      restart = I('F'),
      model_run_loc = I('4_model_for_PGDL/tmp'))
    depends: set_sntemp_output_vars

# input only contains tmin, tmax, prcp
  # 4_model_for_PGDL/out/sntemp_input.feather.ind:
  #   command: get_segment_drivers(
  #     ind_file = target_name,
  #     model_run_loc = I('4_model_for_PGDL/tmp'),
  #     param_file = I('input/myparam.param'),
  #     start = uncal_start,
  #     stop = uncal_stop)
  # 4_model_for_PGDL/out/sntemp_input.feather:
  #   command: gd_get('4_model_for_PGDL/out/sntemp_input.feather.ind')
  #
  # 4_model_for_PGDL/out/sntemp_input_subset.feather.ind:
  #   command: data_subset_for_pgdl(
  #     ind_file = target_name,
  #     full_data_file = '4_model_for_PGDL/out/sntemp_input.feather')
  # 4_model_for_PGDL/out/sntemp_input_subset.feather:
  #   command: gd_get('4_model_for_PGDL/out/sntemp_input_subset.feather.ind')

# includes output in 4_model_for_PGDL/cfg/uncal_settings.yml
  4_model_for_PGDL/out/uncal_sntemp_input_output_gridmet.feather.ind:
    command: data_for_pgdl(
      ind_file = target_name,
      model_run_loc = I('4_model_for_PGDL/tmp'),
      model_output_file = I('output/stream_temp.out.nsegment'),
      model_fabric_file = I('GIS/Segments_subset.shp'),
      sntemp_vars = sntemp_output_vars)
    depends: uncal_sntemp_run
  4_model_for_PGDL/out/uncal_sntemp_input_output_gridmet.feather:
    command: gd_get('4_model_for_PGDL/out/uncal_sntemp_input_output_gridmet.feather.ind')

  4_model_for_PGDL/out/uncal_sntemp_input_output_gridmet_subset.feather.ind:
    command: data_subset_for_pgdl(
      ind_file = target_name,
      full_data_file = '4_model_for_PGDL/out/uncal_sntemp_input_output_gridmet.feather')
  4_model_for_PGDL/out/uncal_sntemp_input_output_gridmet_subset.feather:
    command: gd_get('4_model_for_PGDL/out/uncal_sntemp_input_output_gridmet_subset.feather.ind')


  4_model_for_PGDL/out/subbasin_options.feather.ind:
    command: subbasin_options(
      ind_file = target_name,
      subbasin_file = '4_model_calibrate/out/drb_subbasins.rds',
      uncal_sntemp_pred_file = '4_model_for_PGDL/out/sntemp_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds')


# -- creating synthetic training datasets --
#     file naming == site_realOrSynthetic_train_percentSegmentsObserved_temporalResolution(days)_obsType.feather

  4_model_for_PGDL/out/drb_synthetic_train_60_21_inSitu.feather.ind:
    command: build_synthetic_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      percent_sites = I(60),
      temporal_res = I(21),
      obs_type = I('in_situ'),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_synthetic_train_60_21_inSitu.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_synthetic_train_60_21_inSitu.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_synthetic_train_10_1_inSitu.feather.ind:
    command: build_synthetic_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      percent_sites = I(10),
      temporal_res = I(1),
      obs_type = I('in_situ'),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_synthetic_train_10_1_inSitu.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_synthetic_train_10_1_inSitu.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_synthetic_train_100_14_rs.feather.ind:
    command: build_synthetic_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      percent_sites = I(100),
      temporal_res = I(14),
      obs_type = I('rs'),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_synthetic_train_100_14_rs.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_synthetic_train_100_14_rs.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

# -- creating real obs training datasets --
#     file naming == site_fullOrSubset_realOrSynthetic_train_percentObs.feather

  4_model_for_PGDL/out/drb_full_real_train_100.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      percent_obs = I(100),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_100.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_100.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_full_real_train_50.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      percent_obs = I(50),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_50.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_50.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_full_real_train_20.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      percent_obs = I(20),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_20.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_20.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_full_real_train_10.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      percent_obs = I(10),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_10.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_10.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_full_real_train_02.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      percent_obs = I(2),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_02.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_02.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

# -- creating real obs training datasets with max of 100 obs per segment during training period --
#     file naming == site_fullOrSubset_realOrSynthetic_train_nObsPerSegment.feather

  4_model_for_PGDL/out/drb_full_real_train_100obs.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      max_obs = I(100),
      n_obs = I(100),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_100obs.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_100obs.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_full_real_train_50obs.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      max_obs = I(100),
      n_obs = I(50),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_50obs.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_50obs.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_full_real_train_10obs.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      max_obs = I(100),
      n_obs = I(10),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_10obs.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_10obs.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

  4_model_for_PGDL/out/drb_full_real_train_2obs.feather.ind:
    command: build_real_training(
      ind_file = target_name,
      data_file = '4_model_for_PGDL/out/sntemp_input_output.feather',
      obs_file = '3_observations/in/obs_temp_full.rds',
      max_obs = I(100),
      n_obs = I(2),
      exp_n = I(5),
      test_yrs = I(12))

  4_model_for_PGDL/out/drb_subset_real_train_2obs.feather.ind:
    command: subset_training(
      ind_file = target_name,
      full_training_file = '4_model_for_PGDL/out/drb_full_real_train_2obs.feather',
      sub_net_file = '4_model_for_PGDL/in/network_subset.rds')

